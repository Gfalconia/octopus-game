local function animate_logo(node, d)
	-- Change Scale to reduce size
	local start_scale = 1.0
	gui.set_scale(node, vmath.vector4(start_scale, start_scale, start_scale, 0))
	-- Get the current color and set alpha to 0 as a basis for fading up
	local from_color = gui.get_color(node)
	local to_color = gui.get_color(node)
	from_color.w = 0
	gui.set_color(node, from_color)
	-- Animate the alpha value from 0 to 1
	gui.animate(node, gui.PROP_COLOR, to_color, gui.EASING_IN, 0.2, d)
	-- Animate the scale up to 110%
	local s = 1.0
	gui.animate(node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0),
	gui.EASING_IN, 1, d, animateButton2)
	local s = 0.0
	gui.animate(node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0),
	gui.EASING_IN, 1, d, animateButton2)
end
local function animate_button(node, d)
	-- Change Scale to reduce size
	local start_scale = 0.7
	gui.set_scale(node, vmath.vector4(start_scale, start_scale, start_scale, 0))
	-- Get the current color and set alpha to 0 as a basis for fading up
	local from_color = gui.get_color(node)
	local to_color = gui.get_color(node)
	from_color.w = 0
	gui.set_color(node, from_color)
	-- Animate the alpha value from 0 to 1
	gui.animate(node, gui.PROP_COLOR, to_color, gui.EASING_IN, 0.2, d)
	-- Animate the scale up to 110%
	local s = 1.1
	gui.animate(node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0),
	gui.EASING_IN, 1, d, animateButton2)
end

function init(self)
	-- Calls the animation functions for each menu button, with a 0.2 second delay
	msg.post(".", "acquire_input_focus")
	animate_logo(gui.get_node("ap-logo"), 0.5)
	animate_button(gui.get_node("start"), 3)
end

function on_input(self, action_id, action)
	if action.released and gui.pick_node(gui.get_node("start"), action.x, action.y) then
		local button = gui.get_node("start") 
		msg.post("/main#script", "start")
	end
end
